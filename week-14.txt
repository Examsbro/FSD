week-14

Fetch user details from server using REST API and show in profile menu using Django


Step1:Check Python version
 python –version
Step2: Install virtual environment
 py –m pip install virtualenv
Step3: create an virtual environment
 py –m venv second
Step4: activate the environment
 .\second\scripts\activate
Step5: install django package
 pip install Django and pip install djangorestframework
Step6: create a project
 django-admin startproject program14
Step7: create a text file
 pip freeze > requirements.txt
Step 8: move to project folder
 cd program14
Step 9: create an application
 django-admin startapp api
 django-admin startapp base
Step 10: open project inside sub folder open api
 And create two files Urls.py, Serializers.py


Add the below code
 Views.py
1. from django.shortcuts import render
2. from django.http import JsonResponse
3. # Create your views here.
4. from rest_framework.response import Response
5. from rest_framework.decorators import api_view
6. from base.models import User
7. from .serializers import UserSerializer
8. import json
9. def home(request):
10. return render(request,'home.html')
11. def register(request):
12. return render(request,'register.html')
13. def profile(request):
14. return render(request,'profile.html')
15. @api_view(['POST'])
16. def getuser(request):
17. req_email=request.data.get('email')
18. Users=User.objects.filter(email=req_email)
19. serializer = UserSerializer(Users,many=True)
20. return Response(serializer.data)
21. @api_view(['POST'])
22. def adduser(request):
23. serializer = UserSerializer(data=request.data)
24. if serializer.is_valid():
25. serializer.save()
26. return Response(serializer.data)
 Urls.py
1. from django.urls import path
2. from . import views
3. urlpatterns = [
4. path('',views.home),
5. path('register/',views.register,name="register"),
6. path('profile/',views.profile,name="profile"),
7. path('add/', views.adduser,name="add"),
8. path('get/',views.getuser,name="get")
9. ]
 Serializers.py
1. from rest_framework import serializers
2. from base.models import User
3. class UserSerializer(serializers.ModelSerializer):
4. class Meta:
5. model = User
6. fields = '__all__'
Step 11: open sub folder program14
Add the below code
 Urls.py
1. from django.contrib import admin
2. from django.urls import path,include
3. urlpatterns = [
4. path('admin/', admin.site.urls),
5. path('',include('api.urls'))
6. ]
 Settings.py
1. import os
2. installed apps => 'rest_framework',
3. 'base',
4. templates =>DIRS =>os.path.join(BASE_DIR,’templates’)
Step 12: open sub folder base
Add the below code
 Models.py
1. from django.db import models
2. # Create your models here.
3. class User(models.Model):
4. userid = models.IntegerField()
5. username = models.CharField(max_length=200)
6. occupation = models.CharField(max_length=200)
7. email = models.CharField(max_length=200)
8. created_date = models.DateTimeField(auto_now_add=True)
Again open inside subfolder migrate
Create one file
 000_initial.py
Add the below code
1. from django.db import migrations, models
2. class Migration(migrations.Migration):
3. initial = True
4. dependencies = [
5. ]
6. operations = [
7. migrations.CreateModel(
8. name='User',
9. fields=[
a. ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
b. ('userid', models.IntegerField()),
c. ('username', models.CharField(max_length=200)),
d. ('occupation', models.CharField(max_length=200)),
e. ('email', models.CharField(max_length=200)),
f. ('created_date', models.DateTimeField(auto_now_add=True)),
10. ],
11. ),
12. ]
Step 13: create and open sub folder templates
Add the below code
 Home.html
1. <!DOCTYPE html>
2. <html lang="en">
3. <head>
4. <meta charset="UTF-8">
5. <meta name="viewport" content="width=device-width, initial-scale=1.0">
6. <title>Home</title>
7. <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
8. <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
9. <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
10. </head>
11. <body>
12. <!-- main menu bar -->
13. <nav class="navbar navbar-expand-lg bg-body-tertiary">
14. <div class="container-fluid">
15. <a class="navbar-brand" href="#">CMRIT</a>
16. <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
17. <span class="navbar-toggler-icon"></span>
18. </button>
19. <div class="collapse navbar-collapse" id="navbarSupportedContent">
20. <ul class="navbar-nav me-auto mb-2 mb-lg-0">
21. <li class="nav-item">
a. <a class="nav-link active" aria-current="page" href="#">Home</a>
22. </li>
23. <li class="nav-item">
a. <a class="nav-link" href="/register">REGISTER</a>
24. </li>
25. <li class="nav-item">
a. <a class="nav-link" href="/profile">PROFILE</a>
26. </li>
27. </ul>
28. </div>
29. </div>
30. </nav>
31. </body>
32. </html>
 Register.html
1. <!DOCTYPE html>
2. <html lang="en">
3. <head>
4. <meta charset="UTF-8">
5. <meta name="viewport" content="width=device-width, initial-scale=1.0">
6. <title>Register</title>
7. <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
8. <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
9. <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
10. </head>
11. <body>
12. <!-- registration form -->
13. <div id="ucard" class="card shadow-sm w-50 mt-5 p-2 mx-auto ">
14. <form id="addUserForm">
15. <div data-mdb-input-init class="form-outline mb-4">
16. <input type="text" id="userid" class="form-control" />
17. <label class="form-label" for="form2Example1">USER ID</label>
18. </div>
19. <div data-mdb-input-init class="form-outline mb-4">
20. <input type="text" id="name" class="form-control" />
21. <label class="form-label" for="form2Example2">USER NAME</label>
22. </div>
23. <div data-mdb-input-init class="form-outline mb-4">
24. <input type="text" id="occ" class="form-control" />
25. <label class="form-label" for="form2Example3">OCCUPATION</label>
26. </div>
27. <div data-mdb-input-init class="form-outline mb-4">
28. <input type="text" id="email" class="form-control" />
29. <label class="form-label" for="form2Example4">EMAIL</label>
30. </div>
31. <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">SAVE</button>
32. </form>
33. </div>
34. <div class="w-50 mt-5 p-2 mx-auto ">
35. <h4 id="success" style="display:none">User Added Successfully</h4>
36. <a href="/" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">BACK</a>
37. </div>
38. </body>
39. <script>
40. $(document).ready(function() {
41. $('#addUserForm').submit(()=>{
42. event.preventDefault();
43. var userid = $("#userid").val();
44. var name=$("#name").val();
45. var occupation=$("#occ").val();
46. var email=$("#email").val();
47. //save data to django db
48. $.ajax({
49. url:'{% url "add" %}',
50. type:"POST",
51. contentType:"application/json",
52. dataType:"json",
53. data: JSON.stringify({
54. userid:userid,
55. username: name,
56. occupation: occupation,
57. email:email
58. }),
59. success: function(data) {
a. var responseData=data;
b. console.log(responseData)
c. if(responseData!="")
d. {
e. $("#success").show()
f. }
g. },
h. error: function(data ){
i. console.log(data);
j. }
k. });
60. });
61. });
62. </script>
63. </html>
 Profile.html
1. <!DOCTYPE html>
2. <html lang="en">
3. <head>
4. <meta charset="UTF-8">
5. <meta name="viewport" content="width=device-width, initial-scale=1.0">
6. <title>Profile</title>
7. <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
8. <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
9. <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
10. </head>
11. <body>
12. <!-- Search Bar -->
13. <div class="w-50 mt-5 p-2 mx-auto ">
14. <form id="findUserForm" class="d-flex" role="search">
15. <input id="email" class="form-control me-2" type="search" placeholder="Search Email" aria-label="Search">
16. <button class="btn btn-outline-success" type="submit">Search</button>
17. </form>
18. </div>
19. <!-- profile card template -->
20. <div id="ucard" style="display:none" class="card shadow-sm w-50 mt-5 p-2 mx-auto ">
21. <img class="avatar d-block mx-auto" width="200px" height="200px" src="https://cdn-icons-
png.freepik.com/512/5733/5733290.png" alt="Icon" />
22. <h2 id="greet" class="text-center">Hi, </h2>
23. <table class="table table-bordered mt-3">
24. <tr>
a. <th>USER ID</th>
b. <td id="uid"></td>
25. </tr>
26. <tr>
a. <th>USERNAME</th>
b. <td id="uname"></td>
27. </tr>
28. <tr>
a. <th>EMAIL</th>
b. <td id="umail"></td>
29. </tr>
30. <tr>
a. <th>OCCUPATION</th>
b. <td id="uoccu"></td>
31. </tr>
32. </table>
33. </div>
34. <div class="w-50 mt-5 p-2 mx-auto ">
35. <h4 id="err" style="display:none">User Not Found</h4>
36. <a href="/" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">BACK</a>
37. </div>
38. </body>
39. <script>
40. $(document).ready(function() {
41. $('#findUserForm').submit(()=>{
42. event.preventDefault();
43. $("#ucard").hide();
44. var email=$("#email").val();
45. //find user on django db
46. $.ajax({
47. url:'{% url "get" %}',
48. type:"POST",
49. contentType:"application/json",
50. dataType:"json",
51. data: JSON.stringify({
52. email:email
53. }),
54. success: function(data) {
a. var responseData=data;
b. console.log(responseData)
c. if(responseData.length!=0)
d. {
e. $("#ucard").show();
f. $("#greet").text(responseData[0].username);
g. $("#uid").text(responseData[0].userid);
h. $("#uname").text(responseData[0].username);
i. $("#umail").text(responseData[0].email);
j. $("#uoccu").text(responseData[0].occupation);
k. }
55. else{
a. $("#err").show();
b. }
c. },
d. error: function(data ){
e. console.log(data);
f. }
g. });
56. });
57. });
58. </script>
59. </html>
Step 14:migrate the changes
 py manage.py makemigrations
 py manage.py migrate
Step 15: run the server
 py manage.py runserver
Step 16: open browser, run http://127.0.0.1:8000/
Output:-